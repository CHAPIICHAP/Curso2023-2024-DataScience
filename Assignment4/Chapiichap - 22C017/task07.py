# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/FacultadInformatica-LinkedData/Curso2023-2024-DataScience/blob/master/Assignment4/course_materials/notebooks/Task07.ipynb

**Task 07: Querying RDF(s)**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2023-2024/master/Assignment4/course_materials"

"""First let's read the RDF file"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "LivingThing" with RDFLib and SPARQL**"""

ns = Namespace("http://somewhere#")
from rdflib.plugins.sparql import prepareQuery

# CODIGO EN RDFLib

for s,p,o in g.triples((None, RDFS.subClassOf, ns.LivingThing)):
  print(s)
q1 = """select distinct ?subc
where
{
?subc rdfs:subClassOf ns:LivingThing.
}"""

# Visualize the results
for r in g.query(q1):
  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

for s,p,o in g.triples((None, RDF.type, ns.Person)):
  print(s)
for s1,p1,o1 in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s2,p2,o2 in g.triples((None, RDF.type, s1)):
    print(s2)
q2 = """select distinct ?individuals
where
{
{?individuals a ns:Person.}
union
{?sub rdfs:subClassOf ns:Person. ?individuals a ?sub}
}"""

# Visualize the results
for r in g.query(q2):
  print(r)

"""**TASK 7.3: List all individuals of "Person" or "Animal" and all their properties including their class with RDFLib and SPARQL. You do not need to list the individuals of the subclasses of person**

"""

for s1,p1,o1 in g.triples((None, RDF.type, ns.Person)):
  for s2, p2, o2 in g.triples((s1, None, None)) :
    print (s2, p2, o2)
for s1,p1,o1 in g.triples((None, RDF.type, ns.Animal)):
  for s2, p2, o2 in g.triples((s1, None, None)) :
    print (s2, p2, o2)
q3 = """select distinct ?individuals ?property
where
{
?sub rdfs:subClassOf ns:LivingThing.
?individuals a ?sub.
?individuals ?property ?value.
}"""

# Visualize the results
for r in g.query(q3):
  print(r)

"""**TASK 7.4:  List the name of the persons who know Rocky**"""

q4 = """select ?names
where
{
?names foaf:knows ns:RockySmith.
}"""

# Visualize the results
for r in g.query(q4):
  print(r)

"""**Task 7.5: List the entities who know at least two other entities in the graph**"""

q5 = """select ?entity
where
{
  ?entity ?predicate ?object.
      ?entity ?predicate ?otherEntity .
      filter (?entity != ?otherEntity)

}"""

# Visualize the results
for r in g.query(q5):
  print(r)